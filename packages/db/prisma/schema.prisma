// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          String   @id @default(cuid())
  email       String   @unique
  firstName   String
  lastName    String
  clerkUserId String   @unique
  imageUrl    String?
  // isAdmin     Boolean  @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // records Record[]
}

model Record {
  id                   String              @id @default(cuid())
  firstName            String
  lastName             String
  middleName           String?
  nameExtension        String?             @default("N/A")
  dateIssued           String
  positionTitle        String
  itemNo               String
  payGrade             Int
  salary               Float
  natureOfAppointment  NatureOfAppointment
  periodOfEmployment   String?             @default("N/A")
  employmentStatus     EmploymentStatus
  dateOfPublication    String
  mode                 String              @default("N/A")
  validated            String?             @default("N/A")
  dateOfAction         String?
  dateOfRelease        String?
  agencyReceivingOffer String?             @default("N/A")
  createdAt            DateTime            @default(now())
  updatedAt            DateTime            @updatedAt

  // Encoder   User?   @relation(fields: [encoderId], references: [id])
  // encoderId String?
}

enum NatureOfAppointment {
  PROMOTION
  DEMOTION
  ORIGINAL
  REEMPLOYMENT
  RECLASSIFICATION
  TRANSFER
}

enum EmploymentStatus {
  PERMANENT
  PROVISIONAL
  SUBSTITUTE
}
